{
	"compiler": {
		"version": "0.8.17+commit.8df45f5f"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_nft",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_docsRegister",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_docsProcess",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "_feeAddres",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_nftId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_startingBid",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_period",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_transactionFee",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "sender",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "Bid",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "seller",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "highestBid",
						"type": "uint256"
					}
				],
				"name": "BidPayment",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "bidder",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "Cashback",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "winner",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "EndAuction",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "feeAddress",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "totalFee",
						"type": "uint256"
					}
				],
				"name": "FeePayment",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "pauser",
						"type": "address"
					}
				],
				"name": "PauseAuction",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "enable",
						"type": "bool"
					}
				],
				"name": "SetWhitelistByAddress",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [],
				"name": "StartAuction",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "pauser",
						"type": "address"
					}
				],
				"name": "UnpauseAuction",
				"type": "event"
			},
			{
				"stateMutability": "payable",
				"type": "fallback"
			},
			{
				"inputs": [],
				"name": "FEE_BASE",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "closeAuction",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "docsProcess",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "docsRegister",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "endAt",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "endAuction",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "ended",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "feeAddress",
				"outputs": [
					{
						"internalType": "address payable",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getBalance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "highestBid",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "highestBidder",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_account",
						"type": "address"
					}
				],
				"name": "isWhitelist",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_totalValue",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_realValue",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_portion",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_clientScore",
						"type": "uint256"
					}
				],
				"name": "newBid",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "nft",
				"outputs": [
					{
						"internalType": "contract IERC721",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "nftId",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "numberOfBids",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "pauseAuction",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "paused",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "receivedBids",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "totalValue",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "realValue",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "portion",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "clientScore",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "downpay",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "seller",
				"outputs": [
					{
						"internalType": "address payable",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_account",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "enable",
						"type": "bool"
					}
				],
				"name": "setWhitelist",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "startAuction",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "started",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalFee",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "unpauseAuction",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"stateMutability": "payable",
				"type": "receive"
			}
		],
		"devdoc": {
			"author": "Gustavo Henrique / gustavo@useinsignia.com",
			"kind": "dev",
			"methods": {
				"closeAuction()": {
					"details": "When this method is called the auction is finally closed Method steps: {1} - Verifications {2} - Safe Transfer the NFT for the highestBidder {3} - Pay the total fee of the auction {4} - Pay the highestBid to the seller {5} - Emit an event for newBid"
				},
				"constructor": {
					"details": "Sets the values for :  {_nft} -> Address of the nft  {_docsRegister} -> The smart contract that stores all the real-state documentation  {_docsProcess} -> The SPU process identifier  {_feeAddres} -> The address that will receives the fees o the auction  {_nftId} -> NFT id, in case of collection, default value 0  {_startingBid} -> The initial bid value  {_period} -> Duration of the auction, timestamp pattern  {_transactionFee} -> Fee charged on every bid , e.g. 100 = 1%"
				},
				"endAuction()": {
					"details": "Once ended only no more bids are allowed , no transfers are done yet"
				},
				"getBalance()": {
					"returns": {
						"_0": "Returns the native token amount inside this contract."
					}
				},
				"isWhitelist(address)": {
					"params": {
						"_account": "Consultant address"
					},
					"returns": {
						"_0": "Boolean of the privilege setted"
					}
				},
				"newBid(uint256,uint256,uint256,uint256)": {
					"details": "Is mandatory to add any bidder previously in the _whitelist array Method steps: {1} - Verifications {2} - Calculate transaction fee {3} - Refund for the last highestBidder {4} - Store bid data {5} - Store highest bid {6} - Emit an event for newBid"
				},
				"pauseAuction()": {
					"details": "Once paused, this method neither restart the autcion or change any bid"
				},
				"setWhitelist(address,bool)": {
					"params": {
						"_account": "The address to insert",
						"enable": "True to guarantee privilegies, false to remove privilegies"
					}
				},
				"startAuction()": {
					"details": "The owner of the NFT MUST hold the NFT before call this method"
				},
				"unpauseAuction()": {
					"details": "Once unpaused, this method neither restart the autcion or change any bid"
				}
			},
			"title": "Auction for real-state NFT sell",
			"version": 1
		},
		"userdoc": {
			"events": {
				"Bid(address,uint256)": {
					"notice": "New bid made"
				},
				"BidPayment(address,uint256)": {
					"notice": "Bid paid for the seller"
				},
				"Cashback(address,uint256)": {
					"notice": "Amount returned for last highest bidder when highest bidder changed"
				},
				"EndAuction(address,uint256)": {
					"notice": "Auction ended"
				},
				"FeePayment(address,uint256)": {
					"notice": "Fee of the auction sent to feeAddress"
				},
				"PauseAuction(address)": {
					"notice": "Auction paused"
				},
				"SetWhitelistByAddress(address,bool)": {
					"notice": "New address added to whitelist"
				},
				"StartAuction()": {
					"notice": "Auction started"
				},
				"UnpauseAuction(address)": {
					"notice": "Auction unpaused"
				}
			},
			"kind": "user",
			"methods": {
				"endAuction()": {
					"notice": "End the auction"
				},
				"getBalance()": {
					"notice": "Function to get the balance of the contract"
				},
				"isWhitelist(address)": {
					"notice": "Public method to check if address has privilegies"
				},
				"pauseAuction()": {
					"notice": "Pause the auction"
				},
				"setWhitelist(address,bool)": {
					"notice": "Method to insert new address to the whitelist"
				},
				"startAuction()": {
					"notice": "Start the auction"
				},
				"unpauseAuction()": {
					"notice": "Unpause the auction"
				}
			},
			"notice": "AuctionSPU contract",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"Contracts/AuctionSPU.sol": "AuctionSPU"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"Contracts/AuctionSPU.sol": {
			"keccak256": "0x738b6386b69e24877754c589b2f0a6705efa74b6b986d7e79e5c4b85a0870ac3",
			"license": "MIT",
			"urls": [
				"bzz-raw://72636868a2656173ebea9c0befd79ca75abc47f2aaeba20e3356fba3d0c26d2d",
				"dweb:/ipfs/QmZ4sLCqDZWRfN1oEUhBPbKQRvvDAjKGcbvvuaF7yLpuT1"
			]
		}
	},
	"version": 1
}